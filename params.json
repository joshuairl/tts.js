{
  "name": "tts.js",
  "tagline": "Javascript API for the Text-to-Speech service, provide an interface to manage built-in TTS speaker or your own TTS service.",
  "body": "<div name=\"js-placeholder\">chinese_page</div>\r\n\r\n## Does your browser support TTS service?\r\n\r\nFirst of all, we should know whether your browser support TTS service or not. Look at following table, `tts.js` can easily know the support of each speaker(type of each TTS service) we use:\r\n\r\n<p name=\"js-placeholder\">browser_support_table</p>\r\n\r\n# Quick Demo\r\n<p name=\"js-placeholder\">quick_demo</p>\r\n\r\n## Getting Started\r\n`TTSManager` is the manager `tts.js` use to handle its TTS services. It is initialized with several `Speaker` instances.\r\n\r\n```javascript\r\n// Pass one or more speakers into manager\r\nvar ttsmanager = new TTSManager([NativeSpeaker, BaiduSpeaker]);\r\n```\r\n\r\nEach `Speaker` instance represents each TTS service that `TTSManager` can use. `tts.js` provide several built-in TTS `Speakers`, and you can build your own `Speaker` class by just implementing a few functions and properties in order to bw operated by `TTSManager`.\r\n\r\nTill now, `tts.js` provide these `Speaker`.\r\n\r\nWhen you get a `TTSManager` instance, the only thing you need to do is call the `.speak` function:\r\n\r\n```javascript\r\nvar str = 'something to speak';\r\nttsmanager.speak(str, function() {\r\n  console.log('speaking finish');\r\n});\r\n```\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}